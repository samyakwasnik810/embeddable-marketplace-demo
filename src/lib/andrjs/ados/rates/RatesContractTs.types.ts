/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type LocalRateType = 'additive' | 'deductive';
export type AndrAddr = string;
export type Binary = string;
export type LocalRateValue =
  | {
      percent: PercentRate;
    }
  | {
      flat: Coin;
    };
export type Decimal = string;
export type Uint128 = string;
export interface InstantiateMsg {
  action: string;
  kernel_address: string;
  owner?: string | null;
  rate: LocalRate;
}
export interface LocalRate {
  description?: string | null;
  rate_type: LocalRateType;
  recipient: Recipient;
  value: LocalRateValue;
}
export interface Recipient {
  address: AndrAddr;
  ibc_recovery_address?: AndrAddr | null;
  msg?: Binary | null;
}
export interface PercentRate {
  percent: Decimal;
}
export interface Coin {
  amount: Uint128;
  denom: string;
}
export type ExecuteMsg =
  | {
      set_rate: {
        action: string;
        rate: LocalRate;
      };
    }
  | {
      remove_rate: {
        action: string;
      };
    }
  | {
      amp_receive: AMPPkt;
    }
  | {
      ownership: OwnershipMessage;
    }
  | {
      update_kernel_address: {
        address: Addr;
      };
    }
  | {
      update_app_contract: {
        address: string;
      };
    }
  | {
      permissioning: PermissioningMessage;
    }
  | {
      rates: RatesMessage;
    };
export type ReplyOn = 'always' | 'error' | 'success' | 'never';
export type OwnershipMessage =
  | ('revoke_ownership_offer' | 'accept_ownership' | 'disown')
  | {
      update_owner: {
        expiration?: Expiry | null;
        new_owner: Addr;
      };
    };
export type Expiry =
  | {
      from_now: Milliseconds;
    }
  | {
      at_time: Milliseconds;
    };
export type Milliseconds = number;
export type Addr = string;
export type PermissioningMessage =
  | {
      set_permission: {
        action: string;
        actors: AndrAddr[];
        permission: Permission;
      };
    }
  | {
      remove_permission: {
        action: string;
        actors: AndrAddr[];
      };
    }
  | {
      permission_action: {
        action: string;
      };
    }
  | {
      disable_action_permissioning: {
        action: string;
      };
    };
export type Permission =
  | {
      local: LocalPermission;
    }
  | {
      contract: AndrAddr;
    };
export type LocalPermission =
  | {
      blacklisted: {
        expiration?: Expiry | null;
        start?: Expiry | null;
      };
    }
  | {
      limited: {
        expiration?: Expiry | null;
        start?: Expiry | null;
        uses: number;
      };
    }
  | {
      whitelisted: {
        expiration?: Expiry | null;
        start?: Expiry | null;
      };
    };
export type RatesMessage =
  | {
      set_rate: {
        action: string;
        rate: Rate;
      };
    }
  | {
      remove_rate: {
        action: string;
      };
    };
export type Rate =
  | {
      local: LocalRate;
    }
  | {
      contract: AndrAddr;
    };
export interface AMPPkt {
  ctx: AMPCtx;
  messages: AMPMsg[];
}
export interface AMPCtx {
  id?: string | null;
  origin: string;
  origin_username?: AndrAddr | null;
  previous_hops?: CrossChainHop[];
  previous_sender: string;
}
export interface CrossChainHop {
  address: string;
  channel: string;
  from_chain: string;
  funds: Coin[];
  to_chain: string;
  username?: AndrAddr | null;
}
export interface AMPMsg {
  config: AMPMsgConfig;
  funds: Coin[];
  message: Binary;
  recipient: AndrAddr;
}
export interface AMPMsgConfig {
  direct: boolean;
  exit_at_error: boolean;
  gas_limit?: number | null;
  ibc_config?: IBCConfig | null;
  reply_on: ReplyOn;
}
export interface IBCConfig {
  recovery_addr?: AndrAddr | null;
}
export type QueryMsg =
  | {
      rate: {
        action: string;
      };
    }
  | {
      owner: {};
    }
  | {
      ownership_request: {};
    }
  | {
      type: {};
    }
  | {
      kernel_address: {};
    }
  | {
      app_contract: {};
    }
  | {
      original_publisher: {};
    }
  | {
      block_height_upon_creation: {};
    }
  | {
      version: {};
    }
  | {
      a_d_o_base_version: {};
    }
  | {
      permissions: {
        actor: string;
        limit?: number | null;
        start_after?: string | null;
      };
    }
  | {
      permissioned_actions: {};
    }
  | {
      rates: {
        action: string;
      };
    }
  | {
      all_rates: {};
    };
export interface ADOBaseVersionResponse {
  version: string;
}
export interface AllRatesResponse {
  all_rates: [string, Rate][];
}
export interface AppContractResponse {
  app_contract: Addr;
}
export interface BlockHeightResponse {
  block_height: number;
}
export interface KernelAddressResponse {
  kernel_address: Addr;
}
export interface PublisherResponse {
  original_publisher: string;
}
export interface ContractOwnerResponse {
  owner: string;
}
export interface ContractPotentialOwnerResponse {
  expiration?: Milliseconds | null;
  potential_owner?: Addr | null;
}
export type ArrayOfString = string[];
export type ArrayOfPermissionInfo = PermissionInfo[];
export interface PermissionInfo {
  action: string;
  actor: string;
  permission: Permission;
}
export interface RateResponse {
  rate: LocalRate;
}
export type NullableRate = Rate | null;
export interface TypeResponse {
  ado_type: string;
}
export interface VersionResponse {
  version: string;
}
export type RatesContractTsExecuteMsg = ExecuteMsg;
