/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

import {
  Uint128,
  Logo,
  EmbeddedLogo,
  Binary,
  InstantiateMsg,
  Cw20Coin,
  InstantiateMarketingInfo,
  MinterResponse,
  ExecuteMsg,
  AndrAddr,
  Expiration,
  Timestamp,
  Uint64,
  ReplyOn,
  OwnershipMessage,
  Expiry,
  Milliseconds,
  Addr,
  PermissioningMessage,
  Permission,
  LocalPermission,
  RatesMessage,
  Rate,
  LocalRateType,
  LocalRateValue,
  Decimal,
  AMPPkt,
  AMPCtx,
  CrossChainHop,
  Coin,
  AMPMsg,
  AMPMsgConfig,
  IBCConfig,
  LocalRate,
  Recipient,
  PercentRate,
  QueryMsg,
  ADOBaseVersionResponse,
  AllAccountsResponse,
  AllAllowancesResponse,
  AllowanceInfo,
  AllRatesResponse,
  AllowanceResponse,
  AppContractResponse,
  BalanceResponse,
  BlockHeightResponse,
  DownloadLogoResponse,
  KernelAddressResponse,
  LogoInfo,
  MarketingInfoResponse,
  PublisherResponse,
  ContractOwnerResponse,
  ContractPotentialOwnerResponse,
  ArrayOfString,
  ArrayOfPermissionInfo,
  PermissionInfo,
  NullableRate,
  TokenInfoResponse,
  TypeResponse,
  VersionResponse,
} from './Cw20ContractTs.types';
import { CamelCasedProperties } from 'type-fest';
export abstract class Cw20ContractTsExecuteMsgBuilder {
  static transfer = ({
    amount,
    recipient,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        transfer: unknown;
      }
    >['transfer']
  >): ExecuteMsg => {
    return {
      transfer: {
        amount,
        recipient,
      } as const,
    };
  };
  static burn = ({
    amount,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        burn: unknown;
      }
    >['burn']
  >): ExecuteMsg => {
    return {
      burn: {
        amount,
      } as const,
    };
  };
  static send = ({
    amount,
    contract,
    msg,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        send: unknown;
      }
    >['send']
  >): ExecuteMsg => {
    return {
      send: {
        amount,
        contract,
        msg,
      } as const,
    };
  };
  static increaseAllowance = ({
    amount,
    expires,
    spender,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        increase_allowance: unknown;
      }
    >['increase_allowance']
  >): ExecuteMsg => {
    return {
      increase_allowance: {
        amount,
        expires,
        spender,
      } as const,
    };
  };
  static decreaseAllowance = ({
    amount,
    expires,
    spender,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        decrease_allowance: unknown;
      }
    >['decrease_allowance']
  >): ExecuteMsg => {
    return {
      decrease_allowance: {
        amount,
        expires,
        spender,
      } as const,
    };
  };
  static transferFrom = ({
    amount,
    owner,
    recipient,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        transfer_from: unknown;
      }
    >['transfer_from']
  >): ExecuteMsg => {
    return {
      transfer_from: {
        amount,
        owner,
        recipient,
      } as const,
    };
  };
  static sendFrom = ({
    amount,
    contract,
    msg,
    owner,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        send_from: unknown;
      }
    >['send_from']
  >): ExecuteMsg => {
    return {
      send_from: {
        amount,
        contract,
        msg,
        owner,
      } as const,
    };
  };
  static burnFrom = ({
    amount,
    owner,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        burn_from: unknown;
      }
    >['burn_from']
  >): ExecuteMsg => {
    return {
      burn_from: {
        amount,
        owner,
      } as const,
    };
  };
  static mint = ({
    amount,
    recipient,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        mint: unknown;
      }
    >['mint']
  >): ExecuteMsg => {
    return {
      mint: {
        amount,
        recipient,
      } as const,
    };
  };
  static updateMarketing = ({
    description,
    marketing,
    project,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_marketing: unknown;
      }
    >['update_marketing']
  >): ExecuteMsg => {
    return {
      update_marketing: {
        description,
        marketing,
        project,
      } as const,
    };
  };
  static uploadLogo = (logo: Logo): ExecuteMsg => {
    return {
      upload_logo: logo,
    };
  };
  static ampReceive = ({
    ctx,
    messages,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        amp_receive: unknown;
      }
    >['amp_receive']
  >): ExecuteMsg => {
    return {
      amp_receive: {
        ctx,
        messages,
      } as const,
    };
  };
  static ownership = (ownershipMessage: OwnershipMessage): ExecuteMsg => {
    return {
      ownership: ownershipMessage,
    };
  };
  static updateKernelAddress = ({
    address,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_kernel_address: unknown;
      }
    >['update_kernel_address']
  >): ExecuteMsg => {
    return {
      update_kernel_address: {
        address,
      } as const,
    };
  };
  static updateAppContract = ({
    address,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_app_contract: unknown;
      }
    >['update_app_contract']
  >): ExecuteMsg => {
    return {
      update_app_contract: {
        address,
      } as const,
    };
  };
  static permissioning = (
    permissioningMessage: PermissioningMessage,
  ): ExecuteMsg => {
    return {
      permissioning: permissioningMessage,
    };
  };
  static rates = (ratesMessage: RatesMessage): ExecuteMsg => {
    return {
      rates: ratesMessage,
    };
  };
}
export abstract class Cw20ContractTsQueryMsgBuilder {
  static tokenInfo = (): QueryMsg => {
    return {
      token_info: {} as const,
    };
  };
  static minter = (): QueryMsg => {
    return {
      minter: {} as const,
    };
  };
  static allowance = ({
    owner,
    spender,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        allowance: unknown;
      }
    >['allowance']
  >): QueryMsg => {
    return {
      allowance: {
        owner,
        spender,
      } as const,
    };
  };
  static allAllowances = ({
    limit,
    owner,
    startAfter,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        all_allowances: unknown;
      }
    >['all_allowances']
  >): QueryMsg => {
    return {
      all_allowances: {
        limit,
        owner,
        start_after: startAfter,
      } as const,
    };
  };
  static allAccounts = ({
    limit,
    startAfter,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        all_accounts: unknown;
      }
    >['all_accounts']
  >): QueryMsg => {
    return {
      all_accounts: {
        limit,
        start_after: startAfter,
      } as const,
    };
  };
  static marketingInfo = (): QueryMsg => {
    return {
      marketing_info: {} as const,
    };
  };
  static downloadLogo = (): QueryMsg => {
    return {
      download_logo: {} as const,
    };
  };
  static balance = ({
    address,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        balance: unknown;
      }
    >['balance']
  >): QueryMsg => {
    return {
      balance: {
        address,
      } as const,
    };
  };
  static owner = (): QueryMsg => {
    return {
      owner: {} as const,
    };
  };
  static ownershipRequest = (): QueryMsg => {
    return {
      ownership_request: {} as const,
    };
  };
  static type = (): QueryMsg => {
    return {
      type: {} as const,
    };
  };
  static kernelAddress = (): QueryMsg => {
    return {
      kernel_address: {} as const,
    };
  };
  static appContract = (): QueryMsg => {
    return {
      app_contract: {} as const,
    };
  };
  static originalPublisher = (): QueryMsg => {
    return {
      original_publisher: {} as const,
    };
  };
  static blockHeightUponCreation = (): QueryMsg => {
    return {
      block_height_upon_creation: {} as const,
    };
  };
  static version = (): QueryMsg => {
    return {
      version: {} as const,
    };
  };
  static aDOBaseVersion = (): QueryMsg => {
    return {
      a_d_o_base_version: {} as const,
    };
  };
  static permissions = ({
    actor,
    limit,
    startAfter,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        permissions: unknown;
      }
    >['permissions']
  >): QueryMsg => {
    return {
      permissions: {
        actor,
        limit,
        start_after: startAfter,
      } as const,
    };
  };
  static permissionedActions = (): QueryMsg => {
    return {
      permissioned_actions: {} as const,
    };
  };
  static rates = ({
    action,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        rates: unknown;
      }
    >['rates']
  >): QueryMsg => {
    return {
      rates: {
        action,
      } as const,
    };
  };
  static allRates = (): QueryMsg => {
    return {
      all_rates: {} as const,
    };
  };
}
